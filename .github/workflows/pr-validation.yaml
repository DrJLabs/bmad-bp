name: PR Validation

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

jobs:
  validate:
    runs-on: ubuntu-latest
    if: github.event.repository.fork != true || vars.ENABLE_CI_IN_FORK == 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run validation
        run: npm run validate

      - name: Check formatting
        run: npm run format:check

      - name: Run linter
        run: npm run lint

      - name: Run tests (if available)
        run: npm test --if-present

      - name: Reviewer docs lint
        run: npm run reviewer:lint-docs

      - name: Install Semgrep CLI
        run: python -m pip install "semgrep>=1.86.0,<2.0.0"

      - name: Reviewer preflight
        run: npm run reviewer:preflight

      - name: Reviewer scan
        run: npm run reviewer:scan

      - name: Reviewer metrics validation
        run: |
          latest=$(ls -1d artifacts/reviewer/* 2>/dev/null | sort | tail -n 1)
          if [ -z "$latest" ]; then
            echo 'No reviewer artifacts found';
            exit 1;
          fi
          npm run reviewer:validate -- --file "$latest/metrics.json"

      - name: Reviewer prune fixtures
        run: npm run reviewer:prune:test

      - name: Reviewer config toggle test
        run: npm run reviewer:config-test

      - name: Comment on PR if checks fail
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `❌ **PR Validation Failed**

              This PR has validation errors that must be fixed before merging:
              - Run \`npm run validate\` to check agent/team configs
              - Run \`npm run format:check\` to check formatting (fix with \`npm run format\`)
              - Run \`npm run lint\` to check linting issues (fix with \`npm run lint:fix\`)

              Please fix these issues and push the changes.`
            })

  reviewer-dry-run:
    name: Reviewer dry-run
    needs: validate
    runs-on: ubuntu-latest
    continue-on-error: true
    if: github.event.repository.fork != true || vars.ENABLE_CI_IN_FORK == 'true'
    permissions:
      contents: read
      actions: write
    strategy:
      matrix:
        mode: [default, strict]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install Semgrep CLI
        run: pip install "semgrep>=1.86.0,<2.0.0"

      - name: Execute reviewer stage (${{ matrix.mode }})
        env:
          REVIEWER_MODE: ${{ matrix.mode }}
        run: |
          set -euo pipefail
          bash tools/reviewer/preflight.sh
          MODE="${REVIEWER_MODE}"
          if [ "$MODE" = "strict" ]; then
            export BMAD_REVIEWER_STRICT=1
          else
            unset BMAD_REVIEWER_STRICT
          fi
          export BMAD_REVIEWER_MODE="$MODE"
          npm run reviewer:scan

      - name: Capture reviewer artifacts
        id: reviewer-artifacts
        run: |
          set -euo pipefail
          shopt -s nullglob
          matches=(artifacts/reviewer/*/)
          if [ ${#matches[@]} -eq 0 ]; then
            echo "No reviewer artifacts found" >&2
            exit 1
          fi
          latest=$(printf '%s\n' "${matches[@]}" | sort | tail -n1)
          dir="${latest%/}"
          echo "dir=$dir" >> "$GITHUB_OUTPUT"

      - name: Validate reviewer metrics
        run: npm run reviewer:validate -- --file "${{ steps.reviewer-artifacts.outputs.dir }}/metrics.json"

      - name: Sync telemetry (dry-run)
        if: github.event_name != 'push' || github.ref != 'refs/heads/main'
        run: npm run reviewer:telemetry-sync -- --metrics "${{ steps.reviewer-artifacts.outputs.dir }}" --mode "${{ matrix.mode }}" --dry-run

      - name: Sync telemetry (main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npm run reviewer:telemetry-sync -- --metrics "${{ steps.reviewer-artifacts.outputs.dir }}" --mode "${{ matrix.mode }}" --repo "${{ github.repository }}" --run-id "${{ github.run_id }}"

      - name: Upload reviewer artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reviewer-${{ matrix.mode }}
          path: ${{ steps.reviewer-artifacts.outputs.dir }}

  telemetry-update:
    name: Record telemetry (main)
    needs:
      - reviewer-dry-run
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Download default artifacts
        uses: actions/download-artifact@v4
        with:
          name: reviewer-default
          path: reviewer-default

      - name: Download strict artifacts
        uses: actions/download-artifact@v4
        with:
          name: reviewer-strict
          path: reviewer-strict
        continue-on-error: true

      - name: Append telemetry rows
        run: |
          set -euo pipefail

          sync_metrics() {
            local label="$1"
            local dir="$2"
            local mode="$3"

            if [ ! -d "$dir" ]; then
              echo "Skipping $label telemetry: directory $dir not found"
              return
            fi

            local metrics_dir="$dir"
            if [ ! -f "$metrics_dir/metrics.json" ]; then
              if [ -d "$dir/artifacts/reviewer" ]; then
                metrics_dir="$dir/artifacts/reviewer"
              else
                local metrics_file
                metrics_file=$(find "$dir" -name metrics.json -print -quit || true)
                if [ -n "$metrics_file" ]; then
                  metrics_dir=$(dirname "$metrics_file")
                fi
              fi
            fi

            if [ ! -f "$metrics_dir/metrics.json" ]; then
              echo "Skipping $label telemetry: metrics.json not found under $dir"
              return
            fi

            npm run reviewer:telemetry-sync -- --metrics "$metrics_dir" --mode "$mode" --repo "${{ github.repository }}" --run-id "${{ github.run_id }}"
          }

          sync_metrics "default" "reviewer-default" "default"
          sync_metrics "strict" "reviewer-strict" "strict"

      - name: Commit telemetry update
        run: |
          set -euo pipefail
          if git diff --quiet docs/bmad/issues/reviewer-rollout.md; then
            echo "No telemetry changes to commit"
            exit 0
          fi
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add docs/bmad/issues/reviewer-rollout.md
          git commit -m "chore: record reviewer telemetry ${{ github.run_id }}"
          git push
